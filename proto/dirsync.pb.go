// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dirsync.proto

package dirsync

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Sync struct {
	Dir                  string   `protobuf:"bytes,1,opt,name=dir,proto3" json:"dir,omitempty"`
	Subdir               string   `protobuf:"bytes,2,opt,name=subdir,proto3" json:"subdir,omitempty"`
	Servers              []string `protobuf:"bytes,3,rep,name=servers,proto3" json:"servers,omitempty"`
	LastSyncTime         int64    `protobuf:"varint,4,opt,name=last_sync_time,json=lastSyncTime,proto3" json:"last_sync_time,omitempty"`
	TimeToSync           []int64  `protobuf:"varint,5,rep,packed,name=time_to_sync,json=timeToSync,proto3" json:"time_to_sync,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sync) Reset()         { *m = Sync{} }
func (m *Sync) String() string { return proto.CompactTextString(m) }
func (*Sync) ProtoMessage()    {}
func (*Sync) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c01ab58cc791b3a, []int{0}
}

func (m *Sync) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sync.Unmarshal(m, b)
}
func (m *Sync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sync.Marshal(b, m, deterministic)
}
func (m *Sync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sync.Merge(m, src)
}
func (m *Sync) XXX_Size() int {
	return xxx_messageInfo_Sync.Size(m)
}
func (m *Sync) XXX_DiscardUnknown() {
	xxx_messageInfo_Sync.DiscardUnknown(m)
}

var xxx_messageInfo_Sync proto.InternalMessageInfo

func (m *Sync) GetDir() string {
	if m != nil {
		return m.Dir
	}
	return ""
}

func (m *Sync) GetSubdir() string {
	if m != nil {
		return m.Subdir
	}
	return ""
}

func (m *Sync) GetServers() []string {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *Sync) GetLastSyncTime() int64 {
	if m != nil {
		return m.LastSyncTime
	}
	return 0
}

func (m *Sync) GetTimeToSync() []int64 {
	if m != nil {
		return m.TimeToSync
	}
	return nil
}

type AddSyncRequest struct {
	ToAdd                *Sync    `protobuf:"bytes,1,opt,name=to_add,json=toAdd,proto3" json:"to_add,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddSyncRequest) Reset()         { *m = AddSyncRequest{} }
func (m *AddSyncRequest) String() string { return proto.CompactTextString(m) }
func (*AddSyncRequest) ProtoMessage()    {}
func (*AddSyncRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c01ab58cc791b3a, []int{1}
}

func (m *AddSyncRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSyncRequest.Unmarshal(m, b)
}
func (m *AddSyncRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSyncRequest.Marshal(b, m, deterministic)
}
func (m *AddSyncRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSyncRequest.Merge(m, src)
}
func (m *AddSyncRequest) XXX_Size() int {
	return xxx_messageInfo_AddSyncRequest.Size(m)
}
func (m *AddSyncRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSyncRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddSyncRequest proto.InternalMessageInfo

func (m *AddSyncRequest) GetToAdd() *Sync {
	if m != nil {
		return m.ToAdd
	}
	return nil
}

type AddSyncResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddSyncResponse) Reset()         { *m = AddSyncResponse{} }
func (m *AddSyncResponse) String() string { return proto.CompactTextString(m) }
func (*AddSyncResponse) ProtoMessage()    {}
func (*AddSyncResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1c01ab58cc791b3a, []int{2}
}

func (m *AddSyncResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddSyncResponse.Unmarshal(m, b)
}
func (m *AddSyncResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddSyncResponse.Marshal(b, m, deterministic)
}
func (m *AddSyncResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddSyncResponse.Merge(m, src)
}
func (m *AddSyncResponse) XXX_Size() int {
	return xxx_messageInfo_AddSyncResponse.Size(m)
}
func (m *AddSyncResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddSyncResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddSyncResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Sync)(nil), "dirsync.Sync")
	proto.RegisterType((*AddSyncRequest)(nil), "dirsync.AddSyncRequest")
	proto.RegisterType((*AddSyncResponse)(nil), "dirsync.AddSyncResponse")
}

func init() { proto.RegisterFile("dirsync.proto", fileDescriptor_1c01ab58cc791b3a) }

var fileDescriptor_1c01ab58cc791b3a = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x41, 0x4f, 0x02, 0x31,
	0x10, 0x85, 0x5d, 0x0b, 0xbb, 0x61, 0x84, 0x55, 0xe7, 0xa0, 0x8d, 0xa7, 0x66, 0xc3, 0x61, 0x4f,
	0x1c, 0x30, 0xf1, 0x68, 0x42, 0xe2, 0x0f, 0x30, 0x85, 0xfb, 0x06, 0xb6, 0x73, 0x68, 0x22, 0x5b,
	0x6c, 0x0b, 0x09, 0x7f, 0xc3, 0x5f, 0x6c, 0xa6, 0x2c, 0x9b, 0x18, 0x6f, 0xf3, 0xde, 0x7c, 0x7d,
	0xaf, 0x2d, 0xcc, 0x8c, 0xf5, 0xe1, 0xdc, 0xb5, 0x8b, 0x83, 0x77, 0xd1, 0x61, 0xd1, 0xcb, 0xea,
	0x27, 0x83, 0xd1, 0xfa, 0xdc, 0xb5, 0xf8, 0x00, 0xc2, 0x58, 0x2f, 0x33, 0x95, 0xd5, 0x13, 0xcd,
	0x23, 0x3e, 0x41, 0x1e, 0x8e, 0x3b, 0x36, 0x6f, 0x93, 0xd9, 0x2b, 0x94, 0x50, 0x04, 0xf2, 0x27,
	0xf2, 0x41, 0x0a, 0x25, 0xea, 0x89, 0xbe, 0x4a, 0x9c, 0x43, 0xf9, 0xb5, 0x0d, 0xb1, 0xe1, 0xe4,
	0x26, 0xda, 0x3d, 0xc9, 0x91, 0xca, 0x6a, 0xa1, 0xa7, 0xec, 0x72, 0xcb, 0xc6, 0xee, 0x09, 0x15,
	0x4c, 0x79, 0xd7, 0x44, 0x97, 0x40, 0x39, 0x56, 0xa2, 0x16, 0x1a, 0xd8, 0xdb, 0x38, 0xa6, 0xaa,
	0x37, 0x28, 0x57, 0xc6, 0xf0, 0xa8, 0xe9, 0xfb, 0x48, 0x21, 0xe2, 0x1c, 0xf2, 0xe8, 0x9a, 0xad,
	0x31, 0xe9, 0x82, 0x77, 0xcb, 0xd9, 0xe2, 0xfa, 0x9e, 0x44, 0x8d, 0xa3, 0x5b, 0x19, 0x53, 0x3d,
	0xc2, 0xfd, 0x70, 0x2e, 0x1c, 0x5c, 0x17, 0x68, 0xf9, 0x09, 0xe5, 0xc7, 0x85, 0x5c, 0x93, 0x3f,
	0xd9, 0x96, 0xf0, 0x1d, 0x8a, 0x1e, 0xc2, 0xe7, 0x21, 0xe5, 0x6f, 0xdd, 0x8b, 0xfc, 0xbf, 0xb8,
	0xe4, 0x55, 0x37, 0xbb, 0x3c, 0xfd, 0xe0, 0xeb, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x84, 0xd7,
	0x5a, 0x29, 0x52, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DirsyncServiceClient is the client API for DirsyncService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DirsyncServiceClient interface {
	AddSync(ctx context.Context, in *AddSyncRequest, opts ...grpc.CallOption) (*AddSyncResponse, error)
}

type dirsyncServiceClient struct {
	cc *grpc.ClientConn
}

func NewDirsyncServiceClient(cc *grpc.ClientConn) DirsyncServiceClient {
	return &dirsyncServiceClient{cc}
}

func (c *dirsyncServiceClient) AddSync(ctx context.Context, in *AddSyncRequest, opts ...grpc.CallOption) (*AddSyncResponse, error) {
	out := new(AddSyncResponse)
	err := c.cc.Invoke(ctx, "/dirsync.DirsyncService/AddSync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DirsyncServiceServer is the server API for DirsyncService service.
type DirsyncServiceServer interface {
	AddSync(context.Context, *AddSyncRequest) (*AddSyncResponse, error)
}

func RegisterDirsyncServiceServer(s *grpc.Server, srv DirsyncServiceServer) {
	s.RegisterService(&_DirsyncService_serviceDesc, srv)
}

func _DirsyncService_AddSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddSyncRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirsyncServiceServer).AddSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dirsync.DirsyncService/AddSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirsyncServiceServer).AddSync(ctx, req.(*AddSyncRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DirsyncService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dirsync.DirsyncService",
	HandlerType: (*DirsyncServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddSync",
			Handler:    _DirsyncService_AddSync_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dirsync.proto",
}
