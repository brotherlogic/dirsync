// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        (unknown)
// source: dirsync.proto

package dirsync

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SyncEvent_SyncState int32

const (
	SyncEvent_UNKNOWN  SyncEvent_SyncState = 0
	SyncEvent_IDLE     SyncEvent_SyncState = 1
	SyncEvent_IN_SYNC  SyncEvent_SyncState = 2
	SyncEvent_COMPLETE SyncEvent_SyncState = 3
)

// Enum value maps for SyncEvent_SyncState.
var (
	SyncEvent_SyncState_name = map[int32]string{
		0: "UNKNOWN",
		1: "IDLE",
		2: "IN_SYNC",
		3: "COMPLETE",
	}
	SyncEvent_SyncState_value = map[string]int32{
		"UNKNOWN":  0,
		"IDLE":     1,
		"IN_SYNC":  2,
		"COMPLETE": 3,
	}
)

func (x SyncEvent_SyncState) Enum() *SyncEvent_SyncState {
	p := new(SyncEvent_SyncState)
	*p = x
	return p
}

func (x SyncEvent_SyncState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SyncEvent_SyncState) Descriptor() protoreflect.EnumDescriptor {
	return file_dirsync_proto_enumTypes[0].Descriptor()
}

func (SyncEvent_SyncState) Type() protoreflect.EnumType {
	return &file_dirsync_proto_enumTypes[0]
}

func (x SyncEvent_SyncState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SyncEvent_SyncState.Descriptor instead.
func (SyncEvent_SyncState) EnumDescriptor() ([]byte, []int) {
	return file_dirsync_proto_rawDescGZIP(), []int{2, 0}
}

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Syncs   []*Sync `protobuf:"bytes,1,rep,name=syncs,proto3" json:"syncs,omitempty"`
	LastRun int64   `protobuf:"varint,2,opt,name=last_run,json=lastRun,proto3" json:"last_run,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dirsync_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_dirsync_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_dirsync_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetSyncs() []*Sync {
	if x != nil {
		return x.Syncs
	}
	return nil
}

func (x *Config) GetLastRun() int64 {
	if x != nil {
		return x.LastRun
	}
	return 0
}

type Sync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dir          string       `protobuf:"bytes,1,opt,name=dir,proto3" json:"dir,omitempty"`
	Subdir       string       `protobuf:"bytes,2,opt,name=subdir,proto3" json:"subdir,omitempty"`
	Servers      []string     `protobuf:"bytes,3,rep,name=servers,proto3" json:"servers,omitempty"`
	LastSyncTime int64        `protobuf:"varint,4,opt,name=last_sync_time,json=lastSyncTime,proto3" json:"last_sync_time,omitempty"`
	TimeToSync   []int64      `protobuf:"varint,5,rep,packed,name=time_to_sync,json=timeToSync,proto3" json:"time_to_sync,omitempty"`
	Events       []*SyncEvent `protobuf:"bytes,6,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *Sync) Reset() {
	*x = Sync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dirsync_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sync) ProtoMessage() {}

func (x *Sync) ProtoReflect() protoreflect.Message {
	mi := &file_dirsync_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sync.ProtoReflect.Descriptor instead.
func (*Sync) Descriptor() ([]byte, []int) {
	return file_dirsync_proto_rawDescGZIP(), []int{1}
}

func (x *Sync) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *Sync) GetSubdir() string {
	if x != nil {
		return x.Subdir
	}
	return ""
}

func (x *Sync) GetServers() []string {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *Sync) GetLastSyncTime() int64 {
	if x != nil {
		return x.LastSyncTime
	}
	return 0
}

func (x *Sync) GetTimeToSync() []int64 {
	if x != nil {
		return x.TimeToSync
	}
	return nil
}

func (x *Sync) GetEvents() []*SyncEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type SyncEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromServer string              `protobuf:"bytes,1,opt,name=from_server,json=fromServer,proto3" json:"from_server,omitempty"`
	ToServer   string              `protobuf:"bytes,2,opt,name=to_server,json=toServer,proto3" json:"to_server,omitempty"`
	State      SyncEvent_SyncState `protobuf:"varint,3,opt,name=state,proto3,enum=dirsync.SyncEvent_SyncState" json:"state,omitempty"`
	StartTime  int64               `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    int64               `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *SyncEvent) Reset() {
	*x = SyncEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dirsync_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncEvent) ProtoMessage() {}

func (x *SyncEvent) ProtoReflect() protoreflect.Message {
	mi := &file_dirsync_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncEvent.ProtoReflect.Descriptor instead.
func (*SyncEvent) Descriptor() ([]byte, []int) {
	return file_dirsync_proto_rawDescGZIP(), []int{2}
}

func (x *SyncEvent) GetFromServer() string {
	if x != nil {
		return x.FromServer
	}
	return ""
}

func (x *SyncEvent) GetToServer() string {
	if x != nil {
		return x.ToServer
	}
	return ""
}

func (x *SyncEvent) GetState() SyncEvent_SyncState {
	if x != nil {
		return x.State
	}
	return SyncEvent_UNKNOWN
}

func (x *SyncEvent) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *SyncEvent) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type AddSyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sync *Sync `protobuf:"bytes,1,opt,name=sync,proto3" json:"sync,omitempty"`
}

func (x *AddSyncRequest) Reset() {
	*x = AddSyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dirsync_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSyncRequest) ProtoMessage() {}

func (x *AddSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dirsync_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSyncRequest.ProtoReflect.Descriptor instead.
func (*AddSyncRequest) Descriptor() ([]byte, []int) {
	return file_dirsync_proto_rawDescGZIP(), []int{3}
}

func (x *AddSyncRequest) GetSync() *Sync {
	if x != nil {
		return x.Sync
	}
	return nil
}

type AddSyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddSyncResponse) Reset() {
	*x = AddSyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dirsync_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSyncResponse) ProtoMessage() {}

func (x *AddSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dirsync_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSyncResponse.ProtoReflect.Descriptor instead.
func (*AddSyncResponse) Descriptor() ([]byte, []int) {
	return file_dirsync_proto_rawDescGZIP(), []int{4}
}

var File_dirsync_proto protoreflect.FileDescriptor

var file_dirsync_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x64, 0x69, 0x72, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x64, 0x69, 0x72, 0x73, 0x79, 0x6e, 0x63, 0x22, 0x48, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x79, 0x6e, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x69, 0x72, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63,
	0x52, 0x05, 0x73, 0x79, 0x6e, 0x63, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x72, 0x75, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6c, 0x61, 0x73, 0x74, 0x52,
	0x75, 0x6e, 0x22, 0xbe, 0x01, 0x0a, 0x04, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x75, 0x62, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x75, 0x62, 0x64, 0x69, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x12,
	0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x79, 0x6e,
	0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f,
	0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d,
	0x65, 0x54, 0x6f, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x2a, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x69, 0x72, 0x73, 0x79, 0x6e,
	0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x09, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x32, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x64, 0x69, 0x72, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3d, 0x0a,
	0x09, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x22, 0x33, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64,
	0x69, 0x72, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x04, 0x73, 0x79, 0x6e,
	0x63, 0x22, 0x11, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x32, 0x50, 0x0a, 0x0e, 0x44, 0x69, 0x72, 0x73, 0x79, 0x6e, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x53, 0x79, 0x6e,
	0x63, 0x12, 0x17, 0x2e, 0x64, 0x69, 0x72, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x53,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x64, 0x69, 0x72,
	0x73, 0x79, 0x6e, 0x63, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x3b, 0x64, 0x69, 0x72, 0x73,
	0x79, 0x6e, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dirsync_proto_rawDescOnce sync.Once
	file_dirsync_proto_rawDescData = file_dirsync_proto_rawDesc
)

func file_dirsync_proto_rawDescGZIP() []byte {
	file_dirsync_proto_rawDescOnce.Do(func() {
		file_dirsync_proto_rawDescData = protoimpl.X.CompressGZIP(file_dirsync_proto_rawDescData)
	})
	return file_dirsync_proto_rawDescData
}

var file_dirsync_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dirsync_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_dirsync_proto_goTypes = []interface{}{
	(SyncEvent_SyncState)(0), // 0: dirsync.SyncEvent.SyncState
	(*Config)(nil),           // 1: dirsync.Config
	(*Sync)(nil),             // 2: dirsync.Sync
	(*SyncEvent)(nil),        // 3: dirsync.SyncEvent
	(*AddSyncRequest)(nil),   // 4: dirsync.AddSyncRequest
	(*AddSyncResponse)(nil),  // 5: dirsync.AddSyncResponse
}
var file_dirsync_proto_depIdxs = []int32{
	2, // 0: dirsync.Config.syncs:type_name -> dirsync.Sync
	3, // 1: dirsync.Sync.events:type_name -> dirsync.SyncEvent
	0, // 2: dirsync.SyncEvent.state:type_name -> dirsync.SyncEvent.SyncState
	2, // 3: dirsync.AddSyncRequest.sync:type_name -> dirsync.Sync
	4, // 4: dirsync.DirsyncService.AddSync:input_type -> dirsync.AddSyncRequest
	5, // 5: dirsync.DirsyncService.AddSync:output_type -> dirsync.AddSyncResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_dirsync_proto_init() }
func file_dirsync_proto_init() {
	if File_dirsync_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dirsync_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dirsync_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dirsync_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dirsync_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dirsync_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dirsync_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dirsync_proto_goTypes,
		DependencyIndexes: file_dirsync_proto_depIdxs,
		EnumInfos:         file_dirsync_proto_enumTypes,
		MessageInfos:      file_dirsync_proto_msgTypes,
	}.Build()
	File_dirsync_proto = out.File
	file_dirsync_proto_rawDesc = nil
	file_dirsync_proto_goTypes = nil
	file_dirsync_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DirsyncServiceClient is the client API for DirsyncService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DirsyncServiceClient interface {
	AddSync(ctx context.Context, in *AddSyncRequest, opts ...grpc.CallOption) (*AddSyncResponse, error)
}

type dirsyncServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDirsyncServiceClient(cc grpc.ClientConnInterface) DirsyncServiceClient {
	return &dirsyncServiceClient{cc}
}

func (c *dirsyncServiceClient) AddSync(ctx context.Context, in *AddSyncRequest, opts ...grpc.CallOption) (*AddSyncResponse, error) {
	out := new(AddSyncResponse)
	err := c.cc.Invoke(ctx, "/dirsync.DirsyncService/AddSync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DirsyncServiceServer is the server API for DirsyncService service.
type DirsyncServiceServer interface {
	AddSync(context.Context, *AddSyncRequest) (*AddSyncResponse, error)
}

// UnimplementedDirsyncServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDirsyncServiceServer struct {
}

func (*UnimplementedDirsyncServiceServer) AddSync(context.Context, *AddSyncRequest) (*AddSyncResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddSync not implemented")
}

func RegisterDirsyncServiceServer(s *grpc.Server, srv DirsyncServiceServer) {
	s.RegisterService(&_DirsyncService_serviceDesc, srv)
}

func _DirsyncService_AddSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddSyncRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DirsyncServiceServer).AddSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dirsync.DirsyncService/AddSync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DirsyncServiceServer).AddSync(ctx, req.(*AddSyncRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DirsyncService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dirsync.DirsyncService",
	HandlerType: (*DirsyncServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddSync",
			Handler:    _DirsyncService_AddSync_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dirsync.proto",
}
